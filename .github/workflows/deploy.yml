name: CI/CD to Docker Hub

on:
  push:
    branches: [docker-hub-deployment]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run migrations
      run: cd backend && python manage.py migrate
      env:
        DB_HOST: localhost
        DB_NAME: test_db
        DB_USER: test_user
        DB_PASSWORD: test_password
        SECRET_KEY: test-secret-key-123
        
    - name: Run tests
      run: |
        cd backend
        python manage.py test
      env:
        DB_HOST: localhost
        DB_NAME: test_db
        DB_USER: test_user
        DB_PASSWORD: test_password
        SECRET_KEY: test-secret-key-123

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/docker-hub-deployment'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push Web image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/library-web:latest

    - name: Build and push Nginx image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: docker/nginx/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/library-nginx:latest

    - name: Verify deployment
      run: |
        echo "Images successfully pushed to Docker Hub"
        echo "Web image: ${{ secrets.DOCKERHUB_USERNAME }}/library-web:latest"
        echo "Nginx image: ${{ secrets.DOCKERHUB_USERNAME }}/library-nginx:latest"
        
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy to production
        run: |
          echo "Образы успешно загружены в Docker Hub!"
          echo "Для развертывания выполните на сервере:"
          echo "docker-compose pull && docker-compose up -d"